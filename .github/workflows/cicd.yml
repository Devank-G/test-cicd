name: Next.js CI/CD

on:
  push:
    branches: ['main']

jobs:
  ci:
    name: Lint, Prettier, Tests
    runs-on: ubuntu-latest
    outputs:
      coverage-path: reports/coverage/
    steps:
      - uses: actions/checkout@v4

      # Cache node_modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Lint & Prettier
      - name: Prettier Check
        run: npm run prettier:check

      - name: ESLint
        run: npm run lint

      # Secret scanning
      - uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --report-format json --report-path gitleaks-report.json
      - uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

      # Run Tests
      - name: Run Tests
        run: npm run test
        env:
          CI: true

      # Upload coverage for SonarScanner
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: reports/coverage/lcov.info

  sonar-scan:
    name: SonarQube Scan & Build
    runs-on: [self-hosted, sonar-runner]
    needs: ci
    steps:
      - uses: actions/checkout@v4

      # Download coverage artifact
      - uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: reports/coverage

      - name: Install dependencies
        run: npm ci

      # SonarQube scan
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        with:
          args: >
            -Dsonar.projectKey=nextjs-app
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=reports/coverage/lcov.info
        env:
          SONAR_HOST_URL: http://54.167.104.88:9000
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Build Next.js
      - name: Build Next.js
        run: npm run build

      # Trivy scan of the built project
      - name: Trivy Scan
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget gnupg lsb-release software-properties-common
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy
          trivy fs --format json -o trivy-report.json .next
      - uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json
